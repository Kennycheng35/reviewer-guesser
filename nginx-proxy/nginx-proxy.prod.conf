upstream backend_servers {
    server api:3000;
    keepalive 32
}

upstream frontend_servers {
    # Points to the service named 'frontend' on its internal port
    server frontend:80;
    keepalive 32; 
}

server {
    listen 80;
    # listen [::]:80; # Listen on IPv6 if enabled/available on your VPS

    # !!! REPLACE with your actual domain name(s) !!!
    server_name reviewbombd.com www.reviewbombd.com;

    # Location for Let's Encrypt ACME challenge verification
    # Must match the path shared with the Certbot container's webroot


    # Hide challenge directory from regular access logs and return 404
    location = /.well-known/acme-challenge/ {
      allow all;
      return 404;
    }

    # For all other HTTP requests, redirect permanently to the HTTPS version
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    # listen [::]:443 ssl http2; # Listen on IPv6 if enabled/available

    # !!! REPLACE with your actual domain name(s) !!!
    server_name reviewbombd.com www.reviewbombd.com;

    # SSL Certificate Configuration provided by Certbot via shared volume
    # !!! REPLACE 'your-domain.com' with your primary domain name used for cert generation !!!
    ssl_certificate /etc/letsencrypt/live/reviewbombd.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/reviewbombd.com/privkey.pem;

    # Include recommended SSL parameters (requires mounting/generating these files)
    # Assumes these are available at /etc/letsencrypt via mount/generation
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Improve SSL Session handling
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m; # ~40000 sessions
    ssl_session_tickets off; # More secure to disable session tickets

    # Security Headers (Recommended)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always; # 2 years HSTS
    add_header X-Content-Type-Options "nosniff" always; # Prevent MIME-sniffing
    add_header X-Frame-Options "SAMEORIGIN" always; # Prevent clickjacking
    add_header Referrer-Policy "strict-origin-when-cross-origin" always; # Control referrer info
    # Consider adding a Content-Security-Policy header - requires careful configuration based on your app's resources
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn; # Log warnings and errors

    # --- Application Routing ---

    # Location block for API requests
    location /api {
        # Add check to avoid processing API location if try_files is used in root location (optional, belt-and-suspenders)
        # try_files $uri @backend_api;
        proxy_pass http://backend_servers; # Forward to backend upstream

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Required for WebSocket support (if needed by API)
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";

        # Optional: Increase proxy timeouts if backend is slow
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;
    }
    # named location for backend proxying (if using try_files above)
    # location @backend_api {
    #     proxy_pass http://backend_servers;
    #     # ... proxy headers ...
    # }


    # Location block for all other requests (Frontend)
    location / {
        proxy_pass http://frontend_servers; # Forward to frontend upstream

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}